<% content_for :javascript_includes do %>
  <%= javascript_include_tag 'visualize', 'data-turbolinks-track': 'reload' %>
  <script src="https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js"></script>
  <style>
    svg * {
      transition: transform 0.5s cubic-bezier(0.47, 0, 0.745, 0.715);
    }
    svg rect {
      transition:
        transform 0.5s cubic-bezier(0.47, 0, 0.745, 0.715),
        width 0.5s cubic-bezier(0.47, 0, 0.745, 0.715),
        height 0.5s cubic-bezier(0.47, 0, 0.745, 0.715);
    }
  </style>
<% end %>
<h1>App 1</h1>
<div class="row">
<div class="column">
  <p>
    Hello. Lorem Ipsum.
  </p>
</div>
<div class="column">
  <svg viewBox="0 0 1060 1200" style="width: 1000px;"></svg>
</div>
<div id="plans" class="column" style="white-space: pre-wrap; font-family: Consolas, monospace; line-height: 100%;">
</div>
<div class="column">
  <hr />
  <p id="json" style="white-space: pre-wrap; font-family: Consolas, monospace; font-size: 0.8em; line-height: 100%;"></p>
</div>
<script type="text/javascript">
  const xmlns = "http://www.w3.org/2000/svg";
  async function get_model() {
    const res = await fetch('/api/cnpy' + window.location.search, { method: 'post' });
    const json = await res.json();
    return json;
  }
  async function init() {
    model_p = get_model();

    window.svg = document.getElementsByTagName('svg')[0];
    window.ctrl = new VisualizerController(svg);
    
    const model = await model_p;
    const { ds, qp, data } = model;
    ctrl.load(data);

    ctrl.draw();
    document.getElementById('json').innerText = JSON.stringify(model, null, 2);
    const qpContexts = handleQueryPlans(model);
    window.qpContexts = qpContexts; // TODO removeme

    await ctrl.play(ds);
    
    // TODO
    await delay(1000);
    const i = 0; // TODO
    await ctrl.playQp(qp[i], qpContexts[i]);
  }
  function replay() {
    ctrl.draw();
    let _ignored = ctrl.play(); // Returns promise.
    return false;
  }
  function handleQueryPlans({ ds, qp, data: _data }) {
    const plansEl = document.getElementById('plans');
    const qpContexts = [];
    let i = 0;
    for (let i = 0; i < qp.length; i++) {
      const qpInfo = qp[i];
      const qpContext = qpToContext(qpInfo, ds);
      qpContexts.push(qpContext);

      const h1 = document.createElement('h1')
      h1.innerText = `${i} Query ${qpInfo.qid}, Plan ${qpInfo.pid}`;
      plans.appendChild(h1);

      let pre = document.createElement('pre');
      pre.className = 'prettyprint lang-py linenums';
      pre.innerText = qpContext.toString();
      plans.appendChild(pre);

      pre = document.createElement('pre');
      pre.className = 'prettyprint lang-json linenums';
      pre.innerText = JSON.stringify(qpInfo, null, 2);
      plans.appendChild(pre);
    }
    PR.prettyPrint();

    return qpContexts;
  }
  init();
</script>
